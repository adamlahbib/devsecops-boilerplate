name: Build and push image
description: 'Builds and pushes a Docker image to Amazon ECR'

inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
  ecr-repository:
    description: 'ECR Repository'
    required: true
  dockerfile:
    description: 'Dockerfile'
    required: true
    default: './Dockerfile'
  stage:
    description: 'Deployment stage'
    required: true

outputs:
  image:
    description: 'Docker image URI'
    value: ${{ steps.image-uri.outputs.tag }}:${{ inputs.stage }}-${{ github.sha }}

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with: 
        version: latest
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    
    - name: Login to Amazon ECR 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Tag Image
      id: image-uri
      shell: bash
      run: |
        tag=${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repository }}
        echo "tag=$tag" >> $GITHUB_OUTPUT
      
    - name: Build and Push Image
      uses: docker/build-push-action@v5
      with:
        push: true
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.image-uri.outputs.tag }}:latest, ${{ steps.image-uri.outputs.tag }}:${{ github.sha }}, ${{ steps.image-uri.outputs.tag }}:${{ inputs.stage }}-${{ github.sha }}
        cache-from: type=gha 
        cache-to: type=gha,mode=max
